import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Preloader from "@/components/ui/preloader";
import ParticleBackground from "@/components/ui/particle-background";
import { PortfolioNavbar } from "@/components/ui/portfolio-navbar";
import fetchContentType from "@/lib/strapi/fetchContentType";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Fetch logo at layout level for navbar
  const data = await fetchContentType(
    "global",
    { populate: { personnelInformations: { populate: "*" } } },
    true,
  );
  const info = data?.personnelInformations;
  const logo = info?.logo;
  const logoUrl = logo?.url;
  const base = process.env.NEXT_PUBLIC_API_URL;
  let logoSrc = "";
  try {
    if (logoUrl && base) logoSrc = new URL(logoUrl, base).href;
    else if (typeof logoUrl === "string") logoSrc = logoUrl;
  } catch {
    // ignore
  }
  return (
    <html lang="en" className="dark">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Preloader />
        <ParticleBackground />
        <PortfolioNavbar logoSrc={logoSrc} logoAlt={logo?.alternativeText || logo?.name || "Logo"} />
        {info?.email && (
          <a
            href={`mailto:${info.email}`}
            className="hidden md:flex fixed left-4 top-[85%] -translate-y-1/2 -rotate-90 origin-left text-white/70 hover:text-white transition-colors z-20 tracking-widest uppercase text-xs"
            aria-label={`Email ${info.firstName} ${info.lastName}`}
          >
            {info.email}
          </a>
        )}
        {children}
      </body>
    </html>
  );
}
